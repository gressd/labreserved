package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PostItemNameReservationHandlerFunc turns a function with the right signature into a post item name reservation handler
type PostItemNameReservationHandlerFunc func(PostItemNameReservationParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostItemNameReservationHandlerFunc) Handle(params PostItemNameReservationParams) middleware.Responder {
	return fn(params)
}

// PostItemNameReservationHandler interface for that can handle valid post item name reservation params
type PostItemNameReservationHandler interface {
	Handle(PostItemNameReservationParams) middleware.Responder
}

// NewPostItemNameReservation creates a new http.Handler for the post item name reservation operation
func NewPostItemNameReservation(ctx *middleware.Context, handler PostItemNameReservationHandler) *PostItemNameReservation {
	return &PostItemNameReservation{Context: ctx, Handler: handler}
}

/*PostItemNameReservation swagger:route POST /item/{name}/reservation postItemNameReservation

post a reservation for a specific lab item

*/
type PostItemNameReservation struct {
	Context *middleware.Context
	Handler PostItemNameReservationHandler
}

func (o *PostItemNameReservation) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPostItemNameReservationParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
